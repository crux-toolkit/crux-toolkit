name: build-crux-distributions
 
on:
  push:
    branches: master
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build-distributions:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, macos-15, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
  
      - name: checkout-repository    
        uses: actions/checkout@v4.1.1
 
      - name: add-short-sha
        shell: bash
        run: |
          echo "git_short_sha=`git rev-parse --short HEAD`"  >> $GITHUB_ENV
          
      - name: setup-python
        uses: actions/setup-python@v5.0.0
        with: 
            python-version: 3.x
 
      - name: configure-build-for-ubuntu
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: |
              python -m pip install numpy
              python -m pip install pandas
              sudo apt-get install ruby
              sudo apt-get install cucumber
              sudo gem install rspec
              cmake -E make_directory "${{runner.workspace}}/build"
              cd "${{runner.workspace}}/build"
              echo Configuring in $(pwd)
              cmake "${{github.workspace}}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: configure-build-for-macos
        if: matrix.os == 'macos-13' || matrix.os == 'macos-15'
        shell: bash
        run: |
              python -m pip install --upgrade pip numpy pandas
              brew install cucumber-ruby
              cmake -E make_directory "${{runner.workspace}}/build"
              cd "${{runner.workspace}}/build"
              echo Configuring in $(pwd)
              cmake "${{github.workspace}}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: configure-build-for-windows-latest
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install gsudo -y
          # Visual C++ Redistributables (often missing in server environments)
          choco install vcredist-all -y
          # .NET Framework versions
          choco install dotnetfx -y
          # Windows SDK components
          choco install windows-sdk-10-version-2004-all -y
          # ATL/MFC redistributables
          choco install vcredist140 -y
          Write-Host "Dependencies installed"
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          refreshenv
          cmake -E make_directory "${{runner.workspace}}/build"
          cd "${{runner.workspace}}/build"
          C:\msys64\usr\bin\wget.exe http://noble.gs.washington.edu/crux-downloads/Thermo.zip
          unzip -P iacceptthelicense Thermo.zip -d dlls
          echo "XRawfile2_x64.dll"
          gsudo regsvr32 /S dlls\Thermo\MSFileReader\XRawfile2_x64.dll
          Write-Host "regsvr32 exit code: $LASTEXITCODE"
          if ($LASTEXITCODE -ne 0) {
            Write-Error "DLL registration failed with exit code: $LASTEXITCODE"
            exit 1
          } else {
           Write-Host "DLL registered successfully"
          }
          echo "fregistry_x64.dll"
          gsudo regsvr32 /S dlls\Thermo\MSFileReader\fregistry_x64.dll
          Write-Host "regsvr32 exit code: $LASTEXITCODE"
          if ($LASTEXITCODE -ne 0) {
            Write-Error "DLL registration failed with exit code: $LASTEXITCODE"
            exit 1
          } else {
           Write-Host "DLL registered successfully"
          }
          echo "Fileio_x64.dll.dll"
          gsudo regsvr32 /S dlls\Thermo\MSFileReader\Fileio_x64.dll
          Write-Host "regsvr32 exit code: $LASTEXITCODE"
          if ($LASTEXITCODE -ne 0) {
            Write-Error "DLL registration failed with exit code: $LASTEXITCODE"
            exit 1
          } else {
           Write-Host "DLL registered successfully"
          }
          cmake "${{github.workspace}}" -G "Visual Studio 17 2022" -A x64

      - name: build
        shell: bash
        run: |
             cd "${{runner.workspace}}/build"
             echo Building in $(pwd)
             cmake --build . --config $BUILD_TYPE 

      - name: build-package
        shell: bash
        run: |
             cd "${{runner.workspace}}/build"
             cmake --build . --config $BUILD_TYPE --target package

      - name: build-source-package
        if: (matrix.os == 'ubuntu-22.04')
        shell: bash
        run: |
             cd "${{runner.workspace}}/build"
             cmake --build . --config $BUILD_TYPE --target package_source

      - name: archive-macos-13-package
        if: (matrix.os == 'macos-13')
        uses: actions/upload-artifact@v4
        with:
          name: crux-4.3.1.${{env.git_short_sha}}.macos-13
          path: ${{runner.workspace}}/build/crux-4.3.1.Darwin.x86_64.zip

      - name: archive-macos-13-package
        if: (matrix.os == 'macos-15')
        uses: actions/upload-artifact@v4
        with:
          name: crux-4.3.1.${{env.git_short_sha}}.macos-15
          path: ${{runner.workspace}}/build/crux-4.3.1.Darwin.*.zip
        
      - name: archive-windows-package
        if: (matrix.os == 'windows-latest')
        uses: actions/upload-artifact@v4
        with:
          name: crux-4.3.1.${{env.git_short_sha}}.windows
          path: ${{runner.workspace}}/build/crux-4.3.1.Windows.AMD64.zip 

      - name: archive-ubuntu-package
        if: (matrix.os == 'ubuntu-22.04')
        uses: actions/upload-artifact@v4
        with:
          name: crux-4.3.1.${{env.git_short_sha}}.ubuntu.22.04
          path:  ${{runner.workspace}}/build/crux-4.3.1.Linux.x86_64.zip
          
      - name: Archive source package
        if: (matrix.os == 'ubuntu-22.04')
        uses: actions/upload-artifact@v4
        with:
          name: crux-4.3.1.${{env.git_short_sha}}.Source
          path: ${{runner.workspace}}/build/crux-4.3.1.Source.tar.gz

      - name: Test
        if: (matrix.os == 'ubuntu-22.04')
        shell: bash
        run: |
             cd ${{runner.workspace}}/build/test
             rm -rf smoke-tests
             cp -r /home/runner/work/crux-toolkit/crux-toolkit/test/smoke-tests .
             cd smoke-tests
             cucumber -v --tags "not @ignore" -f html -o smoke-tests.html    

      - name: Archive smoke test results
        if:  (matrix.os == 'ubuntu-22.04' && always())
        uses: actions/upload-artifact@v4
        with:
          name: smoke.html
          path: ${{runner.workspace}}/build/test/smoke-tests/smoke-tests.html
                 
      - name: Create version file
        if: (github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04')
        shell: bash
        run: |
          echo ${{env.git_short_sha}} > doc/user/latest-build.txt
            
      - name: Push modified webpages to website repository
        if: (github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04')
        uses: nkoppel/push-files-to-another-repository@v1.1.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.DOC_UPDATE_KEY}}
        with:
           source-files: 'doc/user/*'
           destination-username: 'crux-toolkit'
           destination-repository: 'crux-toolkit.github.io'
           destination-directory: '.'
           commit-email: 'cegrant@uw.edu'
             
      - name: Push command webpages to website repository
        if: (github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04')
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
           API_TOKEN_GITHUB: ${{ secrets.DOC_UPDATE_KEY }}
        with:
           source_file: 'doc/user/commands/'
           destination_repo: 'crux-toolkit/crux-toolkit.github.io'
           destination_branch: master
           destination_folder: '.'
           user_email: 'cegrant@uw.edu'
           user_name: 'CharlesEGrant'
           commit_message: 'Update version file for the web site' 

      - name: Copy version file to website repository
        if: (github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04')
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
           API_TOKEN_GITHUB: ${{ secrets.DOC_UPDATE_KEY }}
        with:
           source_file: 'doc/user/latest-build.txt'
           destination_repo: 'crux-toolkit/crux-toolkit.github.io'
           destination_branch: master
           destination_folder: '.'
           user_email: 'cegrant@uw.edu'
           user_name: 'CharlesEGrant'
           commit_message: 'Update version file for the web site' 
  
